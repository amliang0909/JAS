<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>T检验在excel中的使用</title>
    <link href="/2024/12/24/t%E6%A3%80%E9%AA%8C%E5%9C%A8excel%E4%B8%AD%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    <url>/2024/12/24/t%E6%A3%80%E9%AA%8C%E5%9C%A8excel%E4%B8%AD%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<h3 id="T检验在excel中的使用"><a href="#T检验在excel中的使用" class="headerlink" title="T检验在excel中的使用"></a>T检验在excel中的使用</h3><p>.</p><p>在Excel中对两组数据做差异显著性检验是我们经常会用到的方法，多数使用者都理解并熟练其原理和使用方法的，但可能也有少数人，尽管会用各种软件来做差异性检验，但对其背后的数理并不完全清楚，比如说我自己。前段几天有人问到我，我支支吾吾给讲了个大概，发现自己好多细节并不清楚，后来经过搜索文章后，我才大致有一个相对清晰的认识，现在我把它写下来，以供诸君参考。</p><p>差异显著性检验是统计假设检验的一种，用于比较两组或多组数据之间的差异是否显著。它有好几种类型，包括t检验，u检验，卡方检验以及方差分析等，我们这里只讨论t检验。</p><p>但在讲述t检验之前，我们需要先了解中心极限定理，小概率事件等概念做一个简单的回顾复习，这会更好地帮助我们理解差异显著性检验背后的逻辑。</p><h5 id="中心极限定理"><a href="#中心极限定理" class="headerlink" title="中心极限定理"></a>中心极限定理</h5><p>什么是中心极限定理，中心极限定理指的是在一定条件下，独立随机变量的期望随着样本量的增大会趋向于正态分布，也就是说，它的累计分布函数会收敛于标准正态分布。</p><p>换句话说，<strong>不管总体样本是什么分布，当样我们任意从总体样本中抽取足够大的样本时，这些被抽样的样本均值都会围绕在总体样本的均值周围，并且呈正态分布。</strong></p><p>如果再具体一点说，就是对某一个总体样品数据中进行放回随机抽样，每次抽取样本数量为n，抽了k次，则每次抽样得到的均值是m1，m2，m3，……，mk。这时候我们会发现，这些抽样样本的均值（即m1，m2，m3，……，mk）是满足正态分布的，这就是中心极限定理。</p><p>中心极限定理不要求随机变量本身是正态分布的，所以很容易推测，当在一定条件下，我们可以使用对正态分布成立的方法去应对非正态分布。比如，对样本量n足够大的时候，二项分布 Bin(<em>n, p</em>) 可以用正态分布N(<em>np</em>, <em>np</em>(<em>1-p</em>))来近似等等。</p><h5 id="小概率事件"><a href="#小概率事件" class="headerlink" title="小概率事件"></a>小概率事件</h5><p>小概率事件即是指发生概率极小的事件，也就是说，在假设检验的思想中，<strong>小概率事件在某一次试验中基本上是不会发生的，如果发生了，则说明该实验的原假设出了问题，则应该拒绝原假设</strong>。</p><p>举个例子，就说抛硬币的问题吧。对于一个正常的抛硬币事件，我们知道其出现正反两面的概率各是50%，假设你跟同学玩抛硬币猜正反面的游戏，结果10次下来，你一次都没赢过。这个时候聪明的你一定开始怀疑这枚硬币是不是有问题，并且你用下面这一段证据狠狠打脸了一下这个同学：<br>    假设检验验证该硬币是否是质地均匀的正常硬币</p><p>​H0：零假设该硬币是质地均匀的正常硬币 （出现正反面的概率均为50%）<br>​H1：该硬币不是质地均匀的正常硬币</p><p>假设H0成立，则每次抛出硬币出现正反面的概率均为0.5，那么抛10次硬币，均出现正面的概率为 0.5^10 &#x3D; 0.00098，该概率非常小，属于小概率事件，基本不可能出现，如果出现了，则说明零假设H0不正确。所以，我们可以据此否定零假设H0，即“硬币是质地均匀的正常硬币”这一假设不能成立，故而H1成立，硬币不是正常硬币。</p><p>从上述小例子可以看出小概率事件的数学思想其实就是用反证法进行假设检验。</p><h5 id="差异显著性检验"><a href="#差异显著性检验" class="headerlink" title="差异显著性检验"></a>差异显著性检验</h5><p>那中心极限定理和小概率事件等又与我们今天要讨论的差异显著性检验有什么关系呢？</p><p>因为假设检验（比如t检验、z检验等）是基于正态分布的一类统计方法，其要求样本数据要符合正态分布。而中心极限定理则为我们提供了理论基础，即根据中心极限定理，无论原始数据是否为正态分布，只要样本容量足够大，抽样样本的均值分布就会接近正态分布。</p><p>这样我们就可以对不是正态分布的数据进行差异显著性检验（假设检验）了。</p><p>并且，中心极限定理还帮助我们理解如何将样本均值进行标准化，成为标准正态分布（z值），从而可以计算p值（p值的计算过程是基于正态分布的假设，这一部分如果需要，将来会另写一文详细说明）。</p><p>在假设检验中，我们通常很关心在零假设H0下会是否会出现极端结果，即小概率事件。而前面的p值，则反映了在零假设成立的前提下，观察到当前或者更极端结果的概率，p值越小，说明观察到的结果越不可能在零假设成立的条件下发生，进而就越充分地拒绝零假设。</p><p>所以，我们可以理解到，当p值足够小的时候，发生的事件就可以认为是小概率事件（如图1所示）。通常，我们可以设定一个显著性水平（比如0.05），如果我们观察到的结果的p值小于设定的显著性水平，那么我们就可以拒绝零假设（例如，在差异显著性检验中，我们的零假设一般是样本之间没有差异）。</p><p>在差异显著性检验中，判断差异是否显著的标准，就是看差异是否属于小概率事件，如果差异出现的概率非常低，我们就可以认为这个差异不是偶然的，而是有一定的统计学意义。</p><p><img src="/2024/12/24/t%E6%A3%80%E9%AA%8C%E5%9C%A8excel%E4%B8%AD%E7%9A%84%E4%BD%BF%E7%94%A8/%E6%A6%82%E7%8E%87%E5%88%86%E5%B8%83.png" alt="概率分布"></p><p>到这里，我们基本上清楚了差异显著性检验背后的概率原理了，前面我们已经说过，差异显著性检验包括了好几种检验方法，包括t检验，u检验，卡方检验和方差分析等多种方法，但这次我们只讨论最常用的t检验（t-test）。</p><h5 id="t检验"><a href="#t检验" class="headerlink" title="t检验"></a>t检验</h5><p>t检验又叫student 检验（学生检验），最早是欧洲一个酒厂的质量检测员，为了观测酿酒品质提出来的统计假说检验，当时酒厂不让随便公开发表文章，这位先生就用了 “student” 这样一个化名发表了，所以后来就又叫student test了，这个故事在《女士品茶》里有详细介绍。</p><p>t检验主要用于样本含量较小（比如当样本量n &lt; 30；如果样本量&gt;&#x3D;30，我们一般更倾向于用z检验）的差异检验。</p><p>嗯？前面不是说，当样本量足够大的时候，从任意总体中的抽样样本均值的分布会近似正态分布（中心极限定理），那要是样本量不够大呢？</p><p>如果你对概率分布有一些了解的话，你就会知道，对于小样本量的来说，其均值呈现的分布叫t分布，其自由度为<em>df</em> &#x3D; <em>n - 1</em>。t分布的形状与正态分布相似，其曲线形态随自由度df而改变，df越大，则t分布曲线就越近似正态分布，当自由度df为无穷大时，t分布曲线即为标准正态分布。</p><hr><p>好，那接下来我们具体讨论一下最常见的t检验在最常用的excel中的使用。</p><p>比如我们现在想要看一下两组数据是不是有差异，如下表所示：</p><p><img src="/2024/12/24/t%E6%A3%80%E9%AA%8C%E5%9C%A8excel%E4%B8%AD%E7%9A%84%E4%BD%BF%E7%94%A8/input_data%201.png" alt="input_data 1"></p><p>我们使用excel中自带的t检验函数t.test()来检测两组数据是否有差异。Array1输入control这组数据，Array2输入treat这组数据，前面这些数据输入没啥好说的。</p><p>需要注意的是，接下来的Tail选项如何选？（如下图所示）</p><p><img src="/2024/12/24/t%E6%A3%80%E9%AA%8C%E5%9C%A8excel%E4%B8%AD%E7%9A%84%E4%BD%BF%E7%94%A8/Tails.png" alt="Tails"></p><p>这需要根据你的数据类型和应用场景来设定，在t.test()中，一般分为 ‘单尾’ 和 ‘双尾’ 。</p><p>单尾检验和双尾检验都是检验统计显著性的方法，区别在于，单尾检验只检验一个方向的显著性，而双尾检验则检验两个方向的显著性。</p><p>举个例子，比如，去年你对一个全社区的10岁以下小孩身高进行了测量，一年后的今年，你又对这批小孩的身高做了测量，因为小孩的身高只有两种可能，要么就今年的比去年的显著增高了，要么就是变化不显著，不可能出现比去年的还显著降低的情况，即身高变化只能是单向的。那在这种情况下，我们就使用单位检验了。</p><p>但如果你测量的是两个不同社区 (社区A和社区B) 的小孩身高，这时候，你不确定A是不是一定就比B高，还是B比A高，即其显著变化的方向是双方向的，这种情况下，就使用双尾检验。</p><p>我这里提供的数据，是存在双向变化可能的，所以选择的是双尾检验。</p><p>设定好了Tail之后，下面还有一个type需要选择（如下图所示）</p><p>这里的type通常分为3中类型，即成对检验，双样本等方差假设和双样本异方差检验。</p><p><img src="/2024/12/24/t%E6%A3%80%E9%AA%8C%E5%9C%A8excel%E4%B8%AD%E7%9A%84%E4%BD%BF%E7%94%A8/Type.png" alt="Type"></p><p>我们先来看成对检验，也就是常说的配对样本t检验。那什么情况下选用配对样本检验呢，</p><p>其实这里的配对样本t检验，是与独立样本t检验是相对应的，看名字，我们就大概能知道各自是干嘛的了。还是啰嗦一点，总结一下吧：配对样本检验一般针对的是，观察变量为连续变量，并且两组变量是配对设计的，两组变量是相关的等，而独立样本t检验，则顾名思义就是两组样本是独立的。</p><p><img src="/2024/12/24/t%E6%A3%80%E9%AA%8C%E5%9C%A8excel%E4%B8%AD%E7%9A%84%E4%BD%BF%E7%94%A8/input_data%202.png" alt="input_data 2"></p><p>还是前面那组数据，如果我们给每个数据设定为具体的某一个人，就比如这是心脏瓣膜手术后的一组病人，在对其服用华法林之前和连续服用一周后的凝血值进行t检验，这个时候则要用配对样本t检验。</p><p>而如果只是随机在医院挑选了两组，服用了华法林的术后病人和没有服用华法林的术后病人，就是这些病人，两批人，这个时候则用独立样本t检验。</p><p>接下来我们再来看，什么时候用等方差检验，什么时候用异方差检验？</p><p>本质上，其实是在比较两组独立样本均值时，对于这两组样本的方差是否相等的假设。选择哪种假设取决于你对数据的了解，或者你对数据是否满足方差齐性（等方差）假设的检验。</p><p>换句话说，当你知道或认为两个样本的方差差异不大时，就使用等方差检验；而当你通过等方差检验（比如 Levene 检验）发现两个样本的方差显著不同，或者你本来就知道样本来源可能具有不同的方差时，这个时候就得使用异方差检验。</p><p>但为了减低麻烦，我在处理这类数据前，一般不做方差齐性检验，用眼睛看一下，大概给个估计，就判断二者的方差是不是相近，从而选择做等方差检验还是异方差检验。</p><p>上面的这些内容，看起来其实很简单，但在日常工作中，用到的实在太频繁了，因而还是不避其繁地记录了下来。</p>]]></content>
    
    
    
    <tags>
      
      <tag>统计</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>读《苏东坡新传》李一冰</title>
    <link href="/2024/10/13/%E8%AF%BB%E3%80%8A%E8%8B%8F%E4%B8%9C%E5%9D%A1%E6%96%B0%E4%BC%A0%E3%80%8B%E6%9D%8E%E4%B8%80%E5%86%B0/"/>
    <url>/2024/10/13/%E8%AF%BB%E3%80%8A%E8%8B%8F%E4%B8%9C%E5%9D%A1%E6%96%B0%E4%BC%A0%E3%80%8B%E6%9D%8E%E4%B8%80%E5%86%B0/</url>
    
    <content type="html"><![CDATA[<h3 id="读《苏东坡新传》李一冰"><a href="#读《苏东坡新传》李一冰" class="headerlink" title="读《苏东坡新传》李一冰"></a>读《苏东坡新传》李一冰</h3><p>.</p><p>我读过不少苏轼的诗词，也看过一些与他相关的传闻轶事，但对苏轼的了解依然是零碎杂乱的。比如我知道他很飞扬，却不知道，他也有沉郁的一面，我知道他的诗词多数奔放豁达，却不知道他亦曾历经磨难。于是我尝试想找一本比较公正的关于苏轼的传记读一读。</p><p>很庆幸，我看到了今天要介绍的这部李一冰所著的《苏东坡新传》。真的很惊喜，在这么多《苏传》里，居然还有着一位叫李一冰的老先生，穷八年之力，在经历牢狱之祸后写就的《苏东坡新传》。其他不说，单比起林语堂的《苏东坡传》来，就要高明靠谱得多，也更有性情。林语堂版你读了，很有可能会对作者生出一些轻视之意，原来久负盛名的大作家也不过如此，但李一冰版，你却只会肃然起敬。</p><p><img src="/2024/10/13/%E8%AF%BB%E3%80%8A%E8%8B%8F%E4%B8%9C%E5%9D%A1%E6%96%B0%E4%BC%A0%E3%80%8B%E6%9D%8E%E4%B8%80%E5%86%B0/%E8%8B%8F%E4%B8%9C%E5%9D%A1%E6%96%B0%E4%BC%A0.png" alt="苏东坡新传"></p><p>很快就翻到了苏轼在黄州的那五年，这是我最喜欢的一个章节，也是我认为苏轼一生中最精彩的一段，我所喜欢的苏轼诗词多数都是作于此段时间。</p><p>公元1079年，那年苏轼43岁，刚刚就任湖州开始主政一方，正是意气风发的时候。但旋即就遭到弹劾告发，苏轼也因涉嫌“讥讽新法”而被缉捕入狱，这就是后世著名的“乌台诗案”了。随后死里逃生，以“犯官”的身份，辗转被贬黄州。</p><p>苏轼是否含冤，姑且不论，但是这段九死一生的囚徒经历，在我看来，却是将苏轼的一生分割成了两段。在此之前，他只是北宋一个普通的官僚，最多算是有才华一点，与掩埋历史尘土中的千千万万中国古代士大夫们并无太多区别。但黄州之后，苏轼就像一颗明星一样，一直闪烁在中华文化史上，令后人敬仰。</p><p>苏轼刚到黄州时，寄居在定惠院，此时的他尚处在劫难的惊恐中，如同一只惊弓之鸟，只求能苟全性命。白天他只在住处卧榻睡觉，到了晚上才一个人悄悄跑到院外去散散步，正如他写给其弟苏辙的诗中所记“畏蛇不下榻，睡足吾无求”一样，满怀忧惧。</p><p>后来换了一个住处，搬到了临皋亭，这个地方非常靠近长江，亭下八十余步便是大江，苏轼经常策仗江边。有一次与长子苏迈一同漫游江岸，过知州官邸不过百步，就看见一片绛赤色的崖壁，矗立在深碧色的江水中，气象挺拔雄俊。听人说，这地方就是三国时代周瑜联军大破曹操的赤壁古战场。曾经满怀济世热情的苏轼这会儿正处于人生最低潮，以为自己这一生大概功名无望了，于是在这次初游赤壁时，作下一首《赤壁怀古》》：“大江东去，浪淘尽，千古风流人物。故垒西边，人道是，三国周郎赤壁”，以追思历史英雄人物来弥补内心的空虚。</p><p>也许是时间的流逝，苏轼渐渐地从最初的惶惧和空虚中走出来，开始“扁舟草履，放浪山水间，与樵渔杂处”起来，也正是这种随性的漫游，让他更真切地感受到自然所带来的旷然天真之乐，就像他在《赤壁赋》里所作：“惟江上之清风，与山间之明月，耳得之而为声，目遇之而成色，取之无禁，用之不竭。是造物者之无尽藏也，而吾与子之所共适”一样，纵情山月，怡然自得。</p><p>但是“大江风月，岂可疗饥？”，贬谪犯官的收入难以支撑起家庭的生活，到了被贬黄州的第二年，苏轼一家已经手头很拮据了，并且这种流放的惩罚不知何时才是终期。所以，苏轼就希望能够有一块土地，以当躬耕自给。幸得二十年前在京做官时认识的一位朋友帮忙，才获准得到一块废弃的坡地，该地约五十余亩，位处黄州州府之东的山麓，故而号名“东坡”，苏轼的东坡居士之名亦由此而来。</p><p>苏轼在那块荒地上亲垦田地，自种黄桑，虽然辛苦，但他心里很为满足，“腐儒粗粝支百年，力耕不受众目怜”。他还按照地势高下，规划了一个蓝图，较低的湿地种植粳稻；东面平地上种上枣树和栗树，住在对江的同乡，已经应允送他桑树和果苗；在视野最佳的空地处，构筑房舍，以便安家。此时的苏轼，已经开始淡泊田野，安贫乐道了，不信，下面还有一个小故事。</p><p>苏轼的好友王巩，也因受“乌台诗案”牵连，被黜逐到了偏远的岭南，后来获赦北返，路经黄州来探望苏轼，席间苏轼问及岭南的情况，感触颇多，于是才有了后来的名句：“试问岭南应不好，却道，此心安处是吾乡”。由此可见，此时的苏轼已经心态乐观，顽强自适了。传闻，苏轼作此《定风波·常羡人间琢玉郎》词时，是受随行王巩的一位叫寓娘的歌妾所启发，真假不知，姑且不论。</p><p>至此，苏轼已经完全不似初到黄州的那般惊惧和孤独了，更多的是清醒和超然，在他的《江城子》里，苏轼是这样说的：“梦中了了醉中醒，只渊明，是前生。走遍人间，依旧却躬耕。昨夜东坡春雨足，乌鹊喜，报新晴。”，你看，只有欢乐和满足。</p><p><img src="/2024/10/13/%E8%AF%BB%E3%80%8A%E8%8B%8F%E4%B8%9C%E5%9D%A1%E6%96%B0%E4%BC%A0%E3%80%8B%E6%9D%8E%E4%B8%80%E5%86%B0/%E5%AE%9A%E9%A3%8E%E6%B3%A2.jpg" alt="定风波"></p><p>自从几年前受“诗案”所祸，苏轼至此已经没有太多仕进的念头了，一心只想在黄州作一个侍弄庄稼的农夫，于是就想再置买一些田地，以赡养家口。元丰五年三月七日那一天，他到距黄州三十里地的沙湖去看田，看完田返家的路上，天气骤变，忽然下起了大雨。他们一行人，个个淋得狼狈，独有苏轼安步徐行。不久，雨霁天晴，他很为自己这份坦荡洒脱的心怀而得意，遂作《定风波·莫听穿林打叶声》一首：“莫听穿林打叶声，何妨吟啸且徐行。竹杖芒鞋轻胜马，谁怕，一蓑烟雨任平生。料峭春风吹酒醒，微冷，山头斜照却相迎。回首向来萧瑟处，归去，也无风雨也无晴”。</p><p>人的一生，有追求就必有失落，如果过于执意，内心便难以平静，痛苦自然也就如风雨一样，四面八方地冲蚀着你。在这里，这饱经世患的诗人，在雨中举步轻行，世事无常的变幻已全然不在心间，唯有坦然的超脱，让人神往。</p><p>元丰七年，也就是公元1084年，这一年苏轼48岁，神宗皇帝欲重新起复苏轼，授其水部员外郎，移迁至相对繁华的汝州，至此，他的境地才开始向好转变。</p><p>苏轼自元丰三年（1080）二月到达黄州，至元丰七年四月离去，在此整整住了四年三个月。黄州虽处穷僻，但住久了，一草一木，也不免有情，更别说邻里、朋友了，于是作《满庭芳》以当告别：“归去来兮，吾归何处？万里家在岷峨。百年强半，来日苦无多。坐见黄州再闰，儿童尽楚语吴歌。山中友，鸡豚社酒，相劝老东坡”。</p><p>苏轼离开黄州后，境遇变好，后又得朝堂重任，回到汴京做中书舍人，旬月之间，数次升迁，直到翰林学士，算是时来运转了。但苏轼的施政能力实在一般，比起同时代的司马光尚有不如，更别说王安石了。在之后与章惇等人的政治斗争中又多次被贬，正如其晚年在《自题金山画像》一诗中所叙：“问汝平生功业，黄州惠州儋州”，一路上都在遭贬，并且流放的地方一次比一次远，是更加偏远的广东惠州，海南儋州。</p><p>但黄州之后，再遇贬挫，他的心态已经全然不同了。在谪往惠州的路上，途径江西大庾岭（今属广东韶关）时，看到大庾岭山峰巍峨，壮丽异常，并有薄雾环绕，宛如仙境，不禁写道：“一念失垢污，身心洞清净。浩然天地间，惟我独也正”。这哪像是被贬，更像是退职回家啊，字行间全是超脱轻松、洞明清净。</p><p>这本书，我大多是在夏夜东湖骑行时的间隙在手机上读的，在这样的情境下，我对苏轼“朝上东坡步，夕上东坡步。东坡何所爱，爱此新成树”的平淡安适有了更深的感受。读到这里，我亦阴霾尽去，轻松如沐。</p><p><img src="/2024/10/13/%E8%AF%BB%E3%80%8A%E8%8B%8F%E4%B8%9C%E5%9D%A1%E6%96%B0%E4%BC%A0%E3%80%8B%E6%9D%8E%E4%B8%80%E5%86%B0/%E5%A4%8F%E5%A4%9C%E4%B8%9C%E6%B9%96%E9%AA%91%E8%A1%8C.jpg" alt="夏夜东湖骑行"></p><p>在回程路上，我骑车一路跨山越岗，大汗透衣，却异常畅快。或许是平日里压抑过久，运动出汗带来的力量感，让我觉得无比释放。触觉听觉也好像恢复了灵敏，我能真切地感知到夏夜东湖的热情和友好，一路上幽鸟向我鸣，夜风慰我意。</p><p>等我到凌波门的时候，已经过了零点，栈桥上只有三两个人，或散落呆坐，或依偎成对。刚刚的兴奋还未尽褪，我掏出电话，打算叫上一二朋友，载酒买瓜，来这湖边栈桥上对坐闲谈。翻找许久，竟想不出谁人可约，才反应过来，我在这个城市已无要好朋友，只好悻悻然回了宿舍。</p><p>宿舍紧邻东湖，站在天台上能看清大半的湖景。其时，月出东南，林影在地，又有皓月照窗，场地空明，正是夜游赏月的好情景，只是可惜没有张怀民，遂不得作罢，于是打开word想要尽速记下这一刻的体会。[二零二四年八月十六日晚在工学部新2舍]</p><p>我想起九百多年前的一个月明夜，有一人解衣欲睡，见月色入户，便欣然起行，相约旧友，闲步庭中，对酒引歌。</p>]]></content>
    
    
    
    <tags>
      
      <tag>读书</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Peak calling for CLIP-Seq data by omniCLIP [1]</title>
    <link href="/2024/09/25/Peak-calling-for-CLIP-Seq-data-by-omniCLIP/"/>
    <url>/2024/09/25/Peak-calling-for-CLIP-Seq-data-by-omniCLIP/</url>
    
    <content type="html"><![CDATA[<h3 id="Peak-calling-for-CLIP-Seq-data-by-omniCLIP-1"><a href="#Peak-calling-for-CLIP-Seq-data-by-omniCLIP-1" class="headerlink" title="Peak calling for CLIP-Seq data by omniCLIP [1]"></a>Peak calling for CLIP-Seq data by omniCLIP [1]</h3><p>.</p><h3 id="1-data-preparation"><a href="#1-data-preparation" class="headerlink" title="1. data preparation"></a>1. data preparation</h3><h4 id="1-1-data"><a href="#1-1-data" class="headerlink" title="1.1). data"></a>1.1). data</h4><p><strong>GSE98188</strong> from paper : </p><p>  Drosophila Sister-of-Sex-lethal reinforces a male-specific gene expression pattern by controlling Sex-lethal alternative splicing.  </p><p>  <em>Nucleic Acids Res</em> 2019</p><p> <strong>data download</strong> </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">iCLIP <span class="hljs-keyword">in</span> SL2 cells</span><br>lftp -e &#x27;pget -n 15 -c &quot;ftp://ftp.sra.ebi.ac.uk/vol1/fastq/SRR548/007/SRR5480967/SRR5480967.fastq.gz&quot;;exit&#x27; # Similar methods for other samples.<br></code></pre></td></tr></table></figure><h4 id="1-2-data-clean"><a href="#1-2-data-clean" class="headerlink" title="1.2). data clean"></a>1.2). data clean</h4><p> <strong>Since the paper did not provide the adapter sequences and the length and position of the UMI</strong>.</p><p> I  tried different methods  to mark and remove the UMI and adapter.</p><p> <strong>a). remove adapter</strong></p><p>To detect the adapter sequences used, I first processed the raw sequencing data with trim_galore.</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">ls ../*fastq.gz |while read id;do (trim_galore --quality 20  --length 20 -o ./ $id);done<br></code></pre></td></tr></table></figure><p><img src="/2024/09/25/Peak-calling-for-CLIP-Seq-data-by-omniCLIP/remove%20adapter.png" alt="remove adapter"></p><p>Based on the “auto-detection adapter” in the above figure, we can infer that the adapter sequence is AGATCGGAAGAGC.</p><p>The same processing method was applied to the other samples as well.   </p><p>Therefore,  removing the adapter from the raw sequence data based on the sequences identified above.</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell">for i in *.fastq.gz;<br>do<br>id=$&#123;i%.fastq.gz&#125;<br>echo $i,$id<br>cutadapt -q 25 -a AGATCGGAAGAGC  --overlap=3 -n 1 -m 24 -o $&#123;id&#125;_cutadap.fastq.gz  $&#123;id&#125;.fastq.gz<br>done<br></code></pre></td></tr></table></figure><p> <strong>b). mark UMI</strong></p><p> I used the adapters-removed reads for a BLAST against the genome in flybase and found that there are always 10 unpaired  bases at the 5’ end of the reads. Therefore, I suspect these are the UMI, as shown in the figure below.</p><p>​<a href="mailto:&#114;&#101;&#97;&#100;&#x2d;&#64;&#x53;&#x52;&#82;&#53;&#52;&#x38;&#x30;&#57;&#54;&#x37;&#46;&#49;&#49;">&#114;&#101;&#97;&#100;&#x2d;&#64;&#x53;&#x52;&#82;&#53;&#52;&#x38;&#x30;&#57;&#54;&#x37;&#46;&#49;&#49;</a> 11&#x2F;1   length &#x3D; 53 bp       <img src="/2024/09/25/Peak-calling-for-CLIP-Seq-data-by-omniCLIP/reads%20blast%201.png" alt="reads blast 1">                         </p><p>​<a href="mailto:&#x72;&#x65;&#x61;&#x64;&#45;&#x40;&#83;&#82;&#x52;&#53;&#52;&#56;&#x30;&#57;&#54;&#55;&#x2e;&#x32;&#x31;&#56;">&#x72;&#x65;&#x61;&#x64;&#45;&#x40;&#83;&#82;&#x52;&#53;&#52;&#56;&#x30;&#57;&#54;&#55;&#x2e;&#x32;&#x31;&#56;</a> 218&#x2F;1   length &#x3D; 51 bp</p><p><img src="/2024/09/25/Peak-calling-for-CLIP-Seq-data-by-omniCLIP/reads%20blast%202.png" alt="reads blast 2"></p><p>Next, I used the <strong>flexbar</strong> software to mark the UMIs in the reads.</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">cat &gt;  barcodes.fa   # create a file, with 10 N (length of UMI is 10 bp)<br><span class="hljs-meta prompt_">&gt;</span><span class="language-bash">umi</span><br>NNNNNNNNNN<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell">conda activate py39<br><br>for i in *_cutadapt.fastq.gz;<br>do<br>id=$&#123;i%_cutadapt.fastq.gz&#125;<br>echo $i,$id<br>flexbar -r $&#123;id&#125;_cutadapt.fastq.gz  -b barcodes.fa --umi-tags -t $&#123;id&#125; -z GZ<br>done<br></code></pre></td></tr></table></figure><h3 id="2-omniCLIP-for-CLIP-Seq-peaks-calling"><a href="#2-omniCLIP-for-CLIP-Seq-peaks-calling" class="headerlink" title="2.omniCLIP for CLIP-Seq peaks calling"></a>2.omniCLIP for CLIP-Seq peaks calling</h3><h4 id="2-1-intsall-omniCLIP"><a href="#2-1-intsall-omniCLIP" class="headerlink" title="2.1). intsall omniCLIP"></a>2.1). intsall omniCLIP</h4><p><strong>download</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">git clone https://github.com/philippdre/omniCLIP.git <br></code></pre></td></tr></table></figure><p><strong>create conda env</strong> </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">cd omniCLIP/<br>conda env create -f environment.yml<br>conda activate omniEnv<br></code></pre></td></tr></table></figure><p><strong>install</strong> </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">python3 setup.py install<br></code></pre></td></tr></table></figure><h4 id="2-2-build-a-db-files-of-annotation-gtf"><a href="#2-2-build-a-db-files-of-annotation-gtf" class="headerlink" title="2.2). build a db files of annotation gtf"></a>2.2). build a db files of annotation gtf</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs shell">cd /home/xuyz_g/soft/omniCLIP # programs can only run successfully in directory of omniCLIP，don&#x27;t know why<br><br>omniCLIP generateDB --gff-file /data1/amliang/annotation/fly/Drosophila_melanogaster.BDGP6.22.42.gff3 --db-file /data1/amliang/annotation/fly/flyase/gff/omniCLIP/dmel-all-r6.45.gff.db # <br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">At the same time, you also need to prepare a reference genome sequence and divide it into chromosomes</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">like this <span class="hljs-keyword">in</span> : /data3/tmp_g/genome_anno/fly/genome/chroms</span><br>  2L.fa.gz<br>  2R.fa.gz<br>  3L.fa.gz<br>  3R.fa.gz<br>  4.fa.gz<br>  X.fa.gz<br>  Y.fa.gz<br></code></pre></td></tr></table></figure><h4 id="error"><a href="#error" class="headerlink" title="error"></a>error</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">1) If an error message appears saying that like this:</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">   FileNotFoundError: [Errno 2] No such file or directory: <span class="hljs-string">&#x27;version.py&#x27;</span>,</span> <br><span class="hljs-meta prompt_">#</span><span class="language-bash"> just copy it from another directory to this directory.</span><br>cp /data1/tmp/soft/omniCLIP/version.py  yourPath/omniCLIP-0.2.0-py3.8-linux-x86_64.egg/omniCLIP/<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">2) <span class="hljs-keyword">if</span> a error shows:</span> <br><span class="hljs-meta prompt_">#</span><span class="language-bash"> File <span class="hljs-string">&quot;yourPath/omniCLIP/data_parsing/ParsingArgs.py&quot;</span>, line 44, <span class="hljs-keyword">in</span> parsing_argparse</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">   NameError: name <span class="hljs-string">&#x27;verifying_args&#x27;</span> is not defined</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">Just vim into ParsingArgs.py and comment out or delete this line of verifying_args : like picture</span><br></code></pre></td></tr></table></figure><p><img src="/2024/09/25/Peak-calling-for-CLIP-Seq-data-by-omniCLIP/debug.png" alt="debug"></p><h4 id="2-3-parsing-the-background-files"><a href="#2-3-parsing-the-background-files" class="headerlink" title="2.3). parsing the background files"></a>2.3). parsing the background files</h4><h6 id="Usually-RNA-SEQ-data-but-sometimes-input-data-is-used"><a href="#Usually-RNA-SEQ-data-but-sometimes-input-data-is-used" class="headerlink" title="(Usually RNA-SEQ data, but sometimes input data is used)"></a>(Usually RNA-SEQ data, but sometimes input data is used)</h6><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">omniCLIP parsingBG --db-file /data3/tmp_g/projects/omniCLIP/dmel-all-r6.45.gff.db --genome-dir /data3/tmp_g/projects/omniCLIP/chroms/ --bg-files /data3/tmp_g/projects/SSX_CLIP/4.peak/Ctrl_IP1.bam --bg-files /data3/tmp_g/projects/SSX_CLIP/4.peak/Ctrl_IP2.bam  --out-file /data3/tmp_g/projects/SSX_CLIP/4.peak/CTRL.dat<br></code></pre></td></tr></table></figure><h4 id="2-4-parsing-the-CLIP-files"><a href="#2-4-parsing-the-CLIP-files" class="headerlink" title="2.4). parsing the CLIP files"></a>2.4). parsing the CLIP files</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">omniCLIP parsingCLIP --db-file /data3/tmp_g/projects/omniCLIP/dmel-all-r6.45.gff.db --genome-dir /data3/tmp_g/projects/omniCLIP/chroms/ --clip-files /data3/tmp_g/projects/SSX_CLIP/4.peak/Ssx_IP1.bam  --clip-files /data3/tmp_g/projects/SSX_CLIP/4.peak/Ssx_IP2.bam  --out-file /data3/tmp_g/projects/SSX_CLIP/4.peak/SSX.dat<br></code></pre></td></tr></table></figure><h4 id="2-5-Running-the-omniCLIP-algorithm"><a href="#2-5-Running-the-omniCLIP-algorithm" class="headerlink" title="2.5). Running the omniCLIP algorithm"></a>2.5). Running the omniCLIP algorithm</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">omniCLIP run_omniCLIP --db-file /data3/tmp_g/projects/omniCLIP/dmel-all-r6.45.gff.db  --bg-dat /data3/tmp_g/projects/SSX_CLIP/4.peak/CTRL.dat  --clip-dat /data3/tmp_g/projects/SSX_CLIP/4.peak/SSX.dat  --out-dir /data3/tmp_g/projects/SSX_CLIP/4.peak/reslut<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>Bioinformatic</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Brief Introduction</title>
    <link href="/2024/09/24/Brief-Introduction/"/>
    <url>/2024/09/24/Brief-Introduction/</url>
    
    <content type="html"><![CDATA[<p>Don’t think I’m boring !</p><p>This is just a test text !</p><p>There will be more interesting things to share later !</p><p>《礼记》里古语有说：“学然后知不足，教然后知困”，我深以为然。我希望在日常的技能分享中，能够助于加深自己对技术的理解，这也是我开始写个人博客文章的初衷。如果能顺便帮到其他人，那就更好。</p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
